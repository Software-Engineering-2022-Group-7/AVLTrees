Quiz questions:

1. In this implementation of an AVL tree, what information does a node have associated with it?
    a. A key, a value, a left child, and a right child
    b. A key
    c. A key, a value, a left child, a right child, and a color
    d. A key and children
2. What do we call the first node of a tree?
    a. The "leaf"
    b. The "root"
    c. The "top"
    d. The "core"
3. In this example tree, which node is not a leaf?
     C
 / /   \ \
D A     F G
|        / \
B       E   H
    a. B
    b. E
    c. F
    d. G
4. What is depth in a tree?
    a. The distance of a node from the center of the tree
    b. The distance of a node from the root node
    c. The maximum distance of a node to a leaf node
    d. The minimum distance of a node to a leaf node
5. In this example tree, what is the height of node D?
     C
 / /   \ \
D A     F G
|        / \
B       E   H
    a. 0
    b. 1
    c. 2
    d. 3
6. Which of the following trees is not a binary tree?
    a. A
      / \
     C   B
    b.  A
      / | \
     B  C  D
    c. A
       |
       B
    d. B
       |
       A
7. Which of the following is not a kind of traversal?
    a. Pre-order
    b. Level-order
    c. Height-order
    d. In-order
8. In what order does an in-order traversal visit a node and its children?
    a. The current node's right subtree, the current node, and the current node's left subtree
    b. The current node, the current node's left subtree, and the current node's right subtree
    c. The current node's left subtree, the current node's right subtree, and the current node
    d. The current node's left subtree, the current node, and the current node's right subtree
9. A level-order traversal uses a depth-first approach -- true or false?
    a. True
    b. False
10. Which of the following is NOT an example of a binary search tree?
    a.    A
        / | \
       D  B  C
    b.    C
          |
          A
    c.    B
         / \
        A   D
    d.    D
          |
          C
         / \
        A   B
11. What are the four kinds of unbalance in a tree?
    a. Left-left, left-right, right-right, right-left
    b. Left, right
    c. Left-child, left-forward, right-child, right-forward
    d. Node-left, node-middle, node-right
12. When can a tree become unbalanced?
    a. When updating the value of a node with a specific key
    b. When checking if a tree contains a node with a specific key
    c. When getting the size of the tree
    d. When inserting or removing a node
13. In an AVL tree, what kind of rotation(s) occur to fix a case of left-right unbalance?
    a. Right
    b. Left
    c. Right and then left
    d. Left and then right
14. The image below correctly demonstrates how to fix a case of left-left unbalance -- true or false?
    C                          B
   /     rightRotate(C)       / \
  B     --------------->     A   C
 /
A
    a. True
    b. False
